📒(2023-01-04)📒

* 선택자
1) id 선택자
#id {
	property: value
}
2) class 선택자
.class {
	property: value
}
3) 자손 선택자
.parent .child {
	property: value
}
4) 다중 선택자
.class#id {
	property: value
}
5) 전체 선택자
* {
	property: value
}
6) 그룹 선택자
.class1, .class2 {
	property: value
}
7) 가상 클래스 선택자
- 실제로 html요소를 수정하지 않고, css만으로 가상 요소를 추가해 선택
.선택자: 가상클래스 {
	property: value
}

7-1: first-child
7-2: last-child
7-3: nth-child(n)

* font 기본 속성
font-size: 글자 사이즈
font-weight: 글자 두께
font-style: 글자 기울임
text-decoration: 밑줄, 취소선
color: 글자 색

*box model
box: context->padding->border->margin

box-sizing속성
속성 값
1) content-box: content 영역을 기준으로 box의 size를 적용 (기본 값)
2) border-box: border 영역을 기준으로 box의 size를 적용
ex) div{
	width:200px;
	height:200px;
	padding:50px;
}
=> box-sizing의 속성값이 기본값 content-box이므로 실제의 width는 300px
=> box-sizing을 border-box로 지정하면 width는 200px로 고정 후, padding적용

*block, inline
1) block
- 여러개의 요소를 연속해 입력하면 자동으로 다음줄로 넘어감
- 좌/우 양쪽으로 늘어나 부모 요소의 너비를 가득 채움

2) inline
- 여러개의 요소를 연속해 입력하면 자동으로 다음줄로 넘어가지 않음
- 태그에 할당된 공간 만큼의 너비만 차지
- width, height 등 박스의 규격을 지정하는 속성은 적용이 안됨(display로 block으로 변경하면 속성 지정 가능)

📒(2022-01-05)📒

* 레이아웃
- css 레이아웃의 흐름
1. Float -> 2. Flex -> 3. Grid

1. Float
- float: 특정한 컨테이너 좌우측을 감싸는 형태로 강제 배치할 때 사용
- clear: float가 적용된 요소, 혹은 영향을 받고 있는 요소들에게 추가로 줄 수 있는 속성
- 반응형 웹에 적합하지 않기 때문에 거의 사용하지 않음
